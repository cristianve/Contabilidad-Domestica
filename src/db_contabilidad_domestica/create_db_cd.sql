-- MySQL Script generated by MySQL Workbench
-- 04/30/17 16:28:23
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema db_contabilidad_domestica
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_contabilidad_domestica
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_contabilidad_domestica` DEFAULT CHARACTER SET utf8 ;
USE `db_contabilidad_domestica` ;

-- -----------------------------------------------------
-- Table `db_contabilidad_domestica`.`Monedas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_contabilidad_domestica`.`Monedas` (
  `idMoneda` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idMoneda`))
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `db_contabilidad_domestica`.`Tipos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_contabilidad_domestica`.`Tipos` (
  `idTipo` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTipo`))
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `db_contabilidad_domestica`.`Etiquetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_contabilidad_domestica`.`Etiquetas` (
  `idEtiqueta` INT(11) NOT NULL AUTO_INCREMENT,
  `idTipo` INT(11) NULL DEFAULT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEtiqueta`),
  INDEX `fk_Etiquetas_Tipos1_idx` (`idTipo` ASC),
  CONSTRAINT `fk_Etiquetas_Tipos1`
    FOREIGN KEY (`idTipo`)
    REFERENCES `db_contabilidad_domestica`.`Tipos` (`idTipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `db_contabilidad_domestica`.`Cuentas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_contabilidad_domestica`.`Cuentas` (
  `idCuenta` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `saldo` DOUBLE(12,2) NULL DEFAULT 0,
  `idMoneda` INT(11) NOT NULL,
  `descripcion` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`idCuenta`),
  INDEX `fk_Cuentas_Monedas_idx` (`idMoneda` ASC),
  CONSTRAINT `fk_Cuentas_Monedas`
    FOREIGN KEY (`idMoneda`)
    REFERENCES `db_contabilidad_domestica`.`Monedas` (`idMoneda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `db_contabilidad_domestica`.`Movimientos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_contabilidad_domestica`.`Movimientos` (
  `idMovimiento` INT(11) NOT NULL AUTO_INCREMENT,
  `idCuentaOrigen` INT(11) NOT NULL,
  `idCuentaDestino` INT(11) NULL DEFAULT NULL,
  `idTipo` INT(11) NOT NULL,
  `idEtiqueta` INT(11) NOT NULL,
  `valor` DOUBLE(12,2) NOT NULL,
  `fecha` DATE NOT NULL,
  `descripcion` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`idMovimiento`),
  INDEX `fk_Movimientos_Cuentas1_idx` (`idCuentaOrigen` ASC),
  INDEX `fk_Movimientos_Etiquetas1_idx` (`idEtiqueta` ASC),
  INDEX `fk_Movimientos_Tipos1_idx` (`idTipo` ASC),
  INDEX `fk_Movimientos_Cuentas2_idx` (`idCuentaDestino` ASC),
  CONSTRAINT `fk_Movimientos_Cuentas1`
    FOREIGN KEY (`idCuentaOrigen`)
    REFERENCES `db_contabilidad_domestica`.`Cuentas` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movimientos_Etiquetas1`
    FOREIGN KEY (`idEtiqueta`)
    REFERENCES `db_contabilidad_domestica`.`Etiquetas` (`idEtiqueta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movimientos_Tipos1`
    FOREIGN KEY (`idTipo`)
    REFERENCES `db_contabilidad_domestica`.`Tipos` (`idTipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movimientos_Cuentas2`
    FOREIGN KEY (`idCuentaDestino`)
    REFERENCES `db_contabilidad_domestica`.`Cuentas` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `db_contabilidad_domestica`.`Previsiones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_contabilidad_domestica`.`Previsiones` (
  `idPrevision` INT(11) NOT NULL AUTO_INCREMENT,
  `idCuentaOrigen` INT(11) NOT NULL,
  `idCuentaDestino` INT(11) NULL DEFAULT NULL,
  `idTipo` INT(11) NOT NULL,
  `idEtiqueta` INT(11) NOT NULL,
  `valor` DOUBLE(12,2) NOT NULL,
  `fecha` DATE NOT NULL,
  `descripcion` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`idPrevision`),
  INDEX `fk_Previsiones_Cuentas1_idx` (`idCuentaOrigen` ASC),
  INDEX `fk_Previsiones_Tipos1_idx` (`idTipo` ASC),
  INDEX `fk_Previsiones_Etiquetas1_idx` (`idEtiqueta` ASC),
  INDEX `fk_Previsiones_Cuentas2_idx` (`idCuentaDestino` ASC),
  CONSTRAINT `fk_Previsiones_Cuentas1`
    FOREIGN KEY (`idCuentaOrigen`)
    REFERENCES `db_contabilidad_domestica`.`Cuentas` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Previsiones_Tipos1`
    FOREIGN KEY (`idTipo`)
    REFERENCES `db_contabilidad_domestica`.`Tipos` (`idTipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Previsiones_Etiquetas1`
    FOREIGN KEY (`idEtiqueta`)
    REFERENCES `db_contabilidad_domestica`.`Etiquetas` (`idEtiqueta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Previsiones_Cuentas2`
    FOREIGN KEY (`idCuentaDestino`)
    REFERENCES `db_contabilidad_domestica`.`Cuentas` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1;

USE `db_contabilidad_domestica`;

DELIMITER $$
USE `db_contabilidad_domestica`$$
CREATE DEFINER = CURRENT_USER TRIGGER `db_contabilidad_domestica`.`Cuentas_BEFORE_DELETE` BEFORE DELETE ON `Cuentas` FOR EACH ROW
BEGIN
	SET @disable_triggers=1;
	DELETE FROM Movimientos WHERE idCuentaOrigen=OLD.idCuenta;
    DELETE FROM Previsiones WHERE idCuentaOrigen=OLD.idCuenta;
    
    DELETE FROM Movimientos WHERE idCuentaDestino=OLD.idCuenta;
    DELETE FROM Previsiones WHERE idCuentaDestino=OLD.idCuenta;
    SET @disable_triggers=NULL;
END$$

USE `db_contabilidad_domestica`$$
CREATE DEFINER = CURRENT_USER TRIGGER `db_contabilidad_domestica`.`Movimientos_BEFORE_INSERT` BEFORE INSERT ON `Movimientos` FOR EACH ROW
BEGIN

	IF (NEW.idTipo=1) THEN
	UPDATE Cuentas SET saldo=saldo+NEW.valor WHERE idCuenta=NEW.idCuentaOrigen;
    END IF;
    
    IF (NEW.idTipo=2) THEN
	UPDATE Cuentas SET saldo=saldo-NEW.valor WHERE idCuenta=NEW.idCuentaOrigen;
    END IF;
    
    IF (NEW.idTipo=3) THEN
	UPDATE Cuentas SET saldo=saldo-NEW.valor WHERE idCuenta=NEW.idCuentaOrigen;
    UPDATE Cuentas SET saldo=saldo+NEW.valor WHERE idCuenta=NEW.idCuentaDestino;
    END IF;
END$$

USE `db_contabilidad_domestica`$$
CREATE DEFINER = CURRENT_USER TRIGGER `db_contabilidad_domestica`.`Movimientos_AFTER_DELETE` AFTER DELETE ON `Movimientos` FOR EACH ROW
BEGIN
IF @disable_triggers IS NULL THEN
	IF (OLD.idTipo=1) THEN
	UPDATE Cuentas SET saldo=saldo-OLD.valor WHERE idCuenta=OLD.idCuentaOrigen;
    END IF;
    
    IF (OLD.idTipo=2) THEN
	UPDATE Cuentas SET saldo=saldo+OLD.valor WHERE idCuenta=OLD.idCuentaOrigen;
    END IF;
    
    IF (OLD.idTipo=3) THEN
	UPDATE Cuentas SET saldo=saldo+OLD.valor WHERE idCuenta=OLD.idCuentaOrigen;
    UPDATE Cuentas SET saldo=saldo-OLD.valor WHERE idCuenta=OLD.idCuentaDestino;
    END IF;
END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
